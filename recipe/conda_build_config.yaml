# This feedstocks builds two sets of packages:
# - libllama, llama.cpp, llama.cpp-tests
# - gguf, llama.cpp-tools
# This helps us avoid mixing the two sets of packages in the same build on PBP.
output_set:
  - llama
  - llama_cpp_tools

c_compiler:        # [win]
  - vs2022         # [win]
c_stdlib_version:  # [win]
  - 2022.14        # [win]
cxx_compiler:      # [win]
  - vs2022         # [win]

blas_impl:
  - mkl                        # [win or (linux and x86_64)]
  - openblas                   # [linux]
  - accelerate                 # [osx]
  - cublas                     # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]

gpu_variant:
  - none
  - metal                      # [osx]
  - cuda-12                    # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]

# metal builds now require the MTLBuffer gpuAddress property, introduced in macOS 13.0
c_stdlib_version:              # [osx]
  - 12.1                       # [osx]
  - 13.1                       # [osx]
zip_keys:                      # [osx]
  -                            # [osx]
    - gpu_variant              # [osx]
    - c_stdlib_version         # [osx]

cuda_compiler_version:         # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]
  - none                       # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]
  - 12.4                       # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]

cuda_compiler:                 # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]
- cuda-nvcc                    # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]

zip_keys:                      # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]
  -                            # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]
    - gpu_variant              # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]
    - cuda_compiler_version    # [ANACONDA_ROCKET_ENABLE_CUDA and (win or (linux and x86_64))]