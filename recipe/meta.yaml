{% set name = "llama.cpp" %}
{% set version = "1601" %}

package:
  name: {{ name|lower }}
  version: 0.0.{{ version }}

source:
  url: https://github.com/ggerganov/llama.cpp/archive/refs/tags/b{{ version }}.tar.gz
  sha256: 829f7c3696fb9da15faf0b70e7d33a174d3de5111ac797511ca0974eb42cf572
  patches:
    - osx-64-pick-discrete.patch  # [osx and x86_64]

build:
  skip: True  # [(linux or win) and cuda_compiler_version == "None"]
  skip: True  # [linux or osx]  # Save CI/CD Cycles
  number: 3
  string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                                 # [cuda_compiler_version == "None"]

  script:
    {% macro append_cmake_args(value) -%}
    - export CMAKE_ARGS="%{CMAKE_ARGS} {{ value }}"     # [unix]
    - set CMAKE_ARGS="%CMAKE_ARGS% {{ value }}"         # [win]
    {%- endmacro %}
    {{ append_cmake_args("-DLLAMA_NATIVE=OFF -DBUILD_SHARED_LIBS=ON") }}  # [win]
    {{ append_cmake_args("-DLLAMA_CUBLAS=ON") }}                          # [cuda_compiler_version != "None"]
    - cmake -S . -B build -G Ninja  # [unix]
    - cmake -S . -B build           # [win]
    - cmake --build build --config Release
    - cmake --install build --prefix={{ PREFIX }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - cmake
    - git
    - ninja
  host:
    - cuda-cuart-dev  # [(cuda_compiler_version or "").startswith("12")]
    - libcublas-dev   # [(cuda_compiler_version or "").startswith("12")]
  run:
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]

test:
  commands:
    - main --help
    - server --help

about:
  home: https://github.com/ggerganov/llama.cpp
  summary: Port of Facebook's LLaMA model in C/C++
  license: MIT
  license_family: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - sodre
