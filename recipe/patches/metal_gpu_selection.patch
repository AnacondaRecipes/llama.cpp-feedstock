From a7a44342a7becf02a3bf640a022f9edaa5a3f3ce Mon Sep 17 00:00:00 2001
From: Charles Bousseau <cbousseau@anaconda.com>
Date: Mon, 22 Sep 2025 10:36:54 -0400
Subject: [PATCH] metal gpu selection

In macOS, in order for the system to provide a default Metal device object, you must link to the Core Graphics framework. 
You usually need to do this explicitly if you’re writing apps that don’t use graphics by default, such as command line tools.
https://developer.apple.com/documentation/metal/1433401-mtlcreatesystemdefaultdevice?language=objc
Systems with Apple silicon only have one GPU, which removes the need to choose a GPU.
https://developer.apple.com/documentation/metal/mtldevice/1433409-lowpower#discussion

I did try linking to CoreGraphics, but MTLCreateSystemDefaultDevice was still returning nil.
---
 ggml/src/ggml-metal/ggml-metal-device.m | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/ggml/src/ggml-metal/ggml-metal-device.m b/ggml/src/ggml-metal/ggml-metal-device.m
index 67f71ace2..beae781b8 100644
--- a/ggml/src/ggml-metal/ggml-metal-device.m
+++ b/ggml/src/ggml-metal/ggml-metal-device.m
@@ -449,6 +449,25 @@ ggml_metal_device_t ggml_metal_device_init(void) {
 
     if (dev->mtl_device == nil) {
         dev->mtl_device = MTLCreateSystemDefaultDevice();
+        if (dev->mtl_device == nil) {
+          /*
+            In macOS, in order for the system to provide a default Metal device object, you must link to the Core Graphics framework.
+            You usually need to do this explicitly if you're writing apps that don't use graphics by default, such as command line tools.
+            > https://developer.apple.com/documentation/metal/1433401-mtlcreatesystemdefaultdevice?language=objc
+            Systems with Apple silicon only have one GPU, which removes the need to choose a GPU.
+            > https://developer.apple.com/documentation/metal/mtldevice/1433409-lowpower#discussion
+           */
+            NSArray * devices = MTLCopyAllDevices();
+            for (id<MTLDevice> device in devices) {
+                if (device != nil) {
+                    if (dev->mtl_device == nil) {
+                        dev->mtl_device = device;
+                    } else {
+                        [device release];
+                    }
+                }
+            }
+        }
 
         if (dev->mtl_device) {
             dev->mtl_queue = [dev->mtl_device newCommandQueue];
-- 
2.39.5 (Apple Git-154)

